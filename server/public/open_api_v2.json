{
  "openapi": "3.1.0",
  "info": {
    "version": "v2.0.0",
    "title": "Carved Rock Fitness API",
    "description": "API for Rest Fundamentals course on Pluralsight"
  },
  "servers": [
    {
      "url": "/api/v2"
    }
  ],
  "paths": {
    "/items/": {
      "get": {
        "tags": [
          "Items"
        ],
        "summary": "Gets all items",
        "description": "",
        "responses": {
          "200": {
            "description": "The list of items",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/items"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/items"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Items"
        ],
        "summary": "Creates a new item",
        "description": "",
        "responses": {
          "201": {
            "description": "The newly created item",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/item"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/item"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Item creation failed"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/itemDTO"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/itemDTO"
              }
            }
          }
        }
      }
    },
    "/items/{id}": {
      "get": {
        "tags": [
          "Items"
        ],
        "summary": "Gets a specific item by ID",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The item",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/itemDetail"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/itemDetail"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "Items"
        ],
        "summary": "Deletes a specific item by ID",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The item that was deleted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/item"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/item"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Items"
        ],
        "summary": "Updates an item",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The updated item",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/item"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/item"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/itemDTO"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/itemDTO"
              }
            }
          }
        }
      }
    },
    "/customers/": {
      "get": {
        "tags": [
          "Customers"
        ],
        "summary": "Gets all customers",
        "description": "",
        "responses": {
          "200": {
            "description": "The list of customers",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/customers"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/customers"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Customers"
        ],
        "summary": "Creates a new customer",
        "description": "",
        "responses": {
          "201": {
            "description": "The customer",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/customer"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/customer"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/customerDTO"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/customerDTO"
              }
            }
          }
        }
      }
    },
    "/customers/{id}": {
      "get": {
        "tags": [
          "Customers"
        ],
        "summary": "Gets a specific customer by ID",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The customer",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/customer"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/customer"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Customers"
        ],
        "summary": "Deletes a specific customer by ID",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The customer that was deleted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/customer"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/customer"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Customers"
        ],
        "summary": "Updates a customer",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The customer",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/customer"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/customer"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/customerDTO"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/customerDTO"
              }
            }
          }
        }
      }
    },
    "/customers/{id}/orders": {
      "get": {
        "tags": [
          "Customers"
        ],
        "summary": "Gets the orders for a customer by customer ID",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The orders",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/customerOrders"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/customerOrders"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/customers/search/{query}": {
      "get": {
        "tags": [
          "Customers"
        ],
        "summary": "Gets customers matching the query",
        "description": "",
        "parameters": [
          {
            "name": "query",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The list of customers",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/customers"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/customers"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/orders/": {
      "get": {
        "tags": [
          "Orders"
        ],
        "summary": "Gets all orders",
        "description": "",
        "parameters": [
          {
            "name": "start",
            "description": "The starting index of orders to retrieve",
            "required": true,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "size",
            "description": "The number of orders to retrieve",
            "required": true,
            "in": "query",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The list of orders",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/orders"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/orders"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Orders"
        ],
        "summary": "Creates a new order",
        "description": "",
        "responses": {
          "201": {
            "description": "The order",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/order"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/order"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/orderDTO"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/orderDTO"
              }
            }
          }
        }
      }
    },
    "/orders/{id}": {
      "get": {
        "tags": [
          "Orders"
        ],
        "summary": "Gets a specific order by ID",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The order",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/order"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/order"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Orders"
        ],
        "summary": "Deletes a specific order by ID",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The order that was deleted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/order"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/order"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Orders"
        ],
        "summary": "Updates an order's status",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The order",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/order"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/order"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/updateOrderDTO"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/updateOrderDTO"
              }
            }
          }
        }
      }
    },
    "/orders/{id}/items/{itemId}": {
      "delete": {
        "tags": [
          "Orders"
        ],
        "summary": "Deletes a specific item from an order by order and item ID",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "itemId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The order after the item is deleted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/order"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/order"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/orders/{id}/items": {
      "post": {
        "tags": [
          "Orders"
        ],
        "summary": "Adds items to an order",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The order after the item is added",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/order"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/order"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/orderItemsDTO"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/orderItemsDTO"
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "items": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "number",
              "example": 1
            },
            "name": {
              "type": "string",
              "example": "Kayak"
            },
            "thumbnailImageUrl": {
              "type": "string",
              "example": "http://localhost:4000/images/thumbnails/1.jpg"
            }
          }
        },
        "xml": {
          "name": "items"
        }
      },
      "item": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "Kayak"
          },
          "thumbnailImageUrl": {
            "type": "string",
            "example": "http://localhost:4000/images/thumbnails/1.jpg"
          }
        },
        "xml": {
          "name": "item"
        }
      },
      "itemDetail": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "Kayak"
          },
          "thumbnailImageUrl": {
            "type": "string",
            "example": "http://localhost:4000/images/thumbnails/1.jpg"
          },
          "description": {
            "type": "string",
            "example": "Go for a paddle"
          },
          "staffReview": {
            "type": "string",
            "example": "This is an awesome product!"
          },
          "fullImageUrl": {
            "type": "string",
            "example": "http://localhost:4000/images/1.jpg"
          }
        },
        "xml": {
          "name": "itemDetail"
        }
      },
      "itemDTO": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Kayak"
          },
          "description": {
            "type": "string",
            "example": "Go for a paddle"
          }
        },
        "required": [
          "name"
        ],
        "xml": {
          "name": "itemDTO"
        }
      },
      "customers": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "example": "Kelsey Shiratori"
            },
            "email": {
              "type": "string",
              "example": "ks@gmail.com"
            },
            "id": {
              "type": "string",
              "example": "45b23d49-7297-43da-b853-3c7f42c7da6a"
            }
          },
          "required": [
            "id"
          ]
        },
        "xml": {
          "name": "customers"
        }
      },
      "customer": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Kelsey Shiratori"
          },
          "email": {
            "type": "string",
            "example": "ks@gmail.com"
          },
          "id": {
            "type": "string",
            "example": "45b23d49-7297-43da-b853-3c7f42c7da6a"
          }
        },
        "required": [
          "id"
        ],
        "xml": {
          "name": "customer"
        }
      },
      "customerOrders": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "example": "262cb163-5ea4-41fa-87c1-a93fac8025c6"
            },
            "status": {
              "type": "string",
              "example": "Created"
            },
            "createdAt": {
              "type": "string",
              "example": "2024-02-08T02:32:51.630Z"
            }
          },
          "required": [
            "id"
          ]
        },
        "xml": {
          "name": "customerOrders"
        }
      },
      "customerDTO": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Kelsey Shiratori"
          },
          "email": {
            "type": "string",
            "example": "ks@gmail.com"
          }
        },
        "xml": {
          "name": "customerDTO"
        }
      },
      "orders": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "example": "262cb163-5ea4-41fa-87c1-a93fac8025c6"
            },
            "status": {
              "type": "string",
              "example": "Created"
            },
            "createdAt": {
              "type": "string",
              "example": "2024-02-08T02:32:51.630Z"
            },
            "customer": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Kelsey Shiratori"
                },
                "email": {
                  "type": "string",
                  "example": "ks@gmail.com"
                },
                "id": {
                  "type": "string",
                  "example": "45b23d49-7297-43da-b853-3c7f42c7da6a"
                }
              },
              "required": [
                "id"
              ]
            }
          },
          "required": [
            "id"
          ]
        },
        "xml": {
          "name": "orders"
        }
      },
      "order": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "262cb163-5ea4-41fa-87c1-a93fac8025c6"
          },
          "status": {
            "type": "string",
            "example": "Created"
          },
          "createdAt": {
            "type": "string",
            "example": "2024-02-08T02:32:51.630Z"
          },
          "customer": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "example": "Kelsey Shiratori"
              },
              "email": {
                "type": "string",
                "example": "ks@gmail.com"
              },
              "id": {
                "type": "string",
                "example": "45b23d49-7297-43da-b853-3c7f42c7da6a"
              }
            },
            "required": [
              "id"
            ]
          },
          "items": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "orderId": {
                  "type": "string",
                  "example": "262cb163-5ea4-41fa-87c1-a93fac8025c6"
                },
                "item": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "number",
                      "example": 1
                    },
                    "name": {
                      "type": "string",
                      "example": "Kayak"
                    },
                    "imageUrl": {
                      "type": "string",
                      "example": "http://localhost:4000/images/1.jpg"
                    }
                  }
                },
                "quantity": {
                  "type": "number",
                  "example": 2
                }
              }
            }
          }
        },
        "required": [
          "id"
        ],
        "xml": {
          "name": "order"
        }
      },
      "orderDTO": {
        "type": "object",
        "properties": {
          "customerId": {
            "type": "string",
            "example": "45b23d49-7297-43da-b853-3c7f42c7da6a"
          },
          "status": {
            "type": "string",
            "example": "Created"
          }
        },
        "required": [
          "customerId"
        ],
        "xml": {
          "name": "orderDTO"
        }
      },
      "orderItemsDTO": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "itemId": {
              "type": "number",
              "example": 1
            },
            "quantity": {
              "type": "number",
              "example": 2
            }
          }
        },
        "xml": {
          "name": "orderItemsDTO"
        }
      },
      "updateOrderDTO": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "Shipped"
          }
        },
        "xml": {
          "name": "updateOrderDTO"
        }
      }
    }
  }
}